from addons.ardos import DistributedObject/AI/UD
from addons.ardos import DistributedDirectory/AI
from addons.ardos import DistributedNode/AI
from addons.ardos import DistributedSmoothNode/AI
from demo.distributed import DistributedAvatar/AI/OV
from demo.distributed import DistributedDistrict/AI
from demo.distributed import AuthMgr/UD


// The most fundamental class.
dclass DistributedObject {
};


// Generic named container.  Intended to be a parent for
// other objects, somewhat like a directory in a file system.
// This object has no attributes and none of them get created, but it
// is still needed. It is used as a parent for the individual games.
dclass DistributedDirectory : DistributedObject {
};


// A DistributedObject that has a position within 3D space.
dclass DistributedNode : DistributedObject {
  // 3D planar coordinates.
  setX(int16/10) broadcast ram ownsend airecv;
  setY(int16/10) broadcast ram ownsend airecv;
  setZ(int16/10) broadcast ram ownsend airecv;

  // Heading (H)
  setH(int16%360/10) broadcast ram ownsend airecv;
  // Pitch (P)
  setP(int16%360/10) broadcast ram ownsend airecv;
  // Roll (R)
  setR(int16%360/10) broadcast ram ownsend airecv;

  setPos : setX, setY, setZ;
  setHpr : setH, setP, setR;
  setPosHpr : setX, setY, setZ, setH, setP, setR;
  setXy : setX, setY;
  setXz : setX, setZ;
  setXyh : setX, setY, setH;
  setXyzh : setX, setY, setZ, setH;
};


// A DistributedNode that needs to have its position lerped (smoothed) over time.
// A common use case would be for player-controlled avatars or NPCs.
dclass DistributedSmoothNode : DistributedNode {
  setSmoothX(int16/10) broadcast ram ownsend airecv;
  setSmoothY(int16/10) broadcast ram ownsend airecv;
  setSmoothZ(int16/10) broadcast ram ownsend airecv;
  
  setSmoothPos : setSmoothX, setSmoothY, setSmoothZ;
};


dclass DistributedAvatar : DistributedSmoothNode {
  setAvatarName(string) required broadcast ram;
  setAnimState(string) broadcast ram ownsend;
};


dclass DistributedDistrict : DistributedObject {
  setDistrictName(string) required broadcast ram;
  setAvailable(uint8) required broadcast ram;
};


dclass AuthMgr : DistributedObject {
  login(string username) clsend;
}
